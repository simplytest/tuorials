name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x
        
    - name: Build
      run: dotnet build ./RestAssuredExamples/uebungen/uebungen.csproj
    - name: Test
      run: dotnet test ./RestAssuredExamples/uebungen/uebungen.csproj --no-build --logger trx --results-directory "TestResults"
      
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results
        path: TestResults
      if: ${{ always() }}
      
    - name: Execute Postman Newman Test Run
      uses: matt-ball/newman-action@master
      with:
        collection: ./RestAssuredExamples/postman_CI_Tests.postman_collection.json
        environment: ./RestAssuredExamples/postman_Test Environment 1.postman_environment.json
        reporters: '["junit"]'

      
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: ${{ always() }}
      with:
        name: .NET Tests            
        path: TestResults/*.trx
        reporter: dotnet-trx


    - name: Install Node
      uses: actions/setup-node@v1
      with:
        node-version: "12.x"

    - name: Install newman
      run: |
          npm install -g newman
          
    - name: Run POSTMAN collection
      run: ./RestAssuredExamples/postman_run_CI.bat
          
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: ${{ always() }}
      with:
        name: .Postman Tests            
        path: TestResults/*.xml
        reporter: java-junit          
